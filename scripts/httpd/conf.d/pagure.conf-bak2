WSGISocketPrefix run/wsgi
#WSGIRestrictStdout On
WSGIRestrictSignal Off
WSGIPythonOptimize 1
WSGIPassAuthorization On
WSGIDaemonProcess pagure user=git group=git maximum-requests=1000 display-name=pagure processes=4 threads=4 inactivity-timeout=300
# It is important that the doc server runs in a different apache process
WSGIDaemonProcess paguredocs user=git group=git maximum-requests=1000 display-name=pagure processes=4 threads=4 inactivity-timeout=300

LISTEN 192.168.32.139:8080
<VirtualHost *:8080>
  #ServerName 192.168.32.139
  WSGIScriptAlias / /usr/share/pagure/doc_pagure.wsgi
  <Location />
    WSGIProcessGroup paguredocs
    #<IfModule mod_authz_core.c>
      # Apache 2.4
    #  Require all granted
    #</IfModule>
    #<IfModule !mod_authz_core.c>
    #  # Apache 2.2
    #  Order deny,allow
    #  Allow from all
    #</IfModule>
   </Location>
</VirtualHost>

LISTEN 192.168.32.139:8081
<VirtualHost *:8081>
  #ServerName 192.168.32.139
  WSGIScriptAlias / /usr/share/pagure/pagure.wsgi
  Alias /releases /var/www/releases
  # Section used to support cloning git repo over http (https in this case)
  SetEnv GIT_PROJECT_ROOT /srv/git/repositories/
  <Location />
   WSGIProcessGroup pagure
   #<IfModule mod_authz_core.c>
      # Apache 2.4
   #   Require all granted
   #</IfModule>
   #<IfModule !mod_authz_core.c>
      # Apache 2.2
   #   Order deny,allow
   #   Allow from all
   #</IfModule>
  </Location>
  # Folder where are stored the tarball of the releases
  <Location /releases>
   WSGIProcessGroup pagure
   <IfModule mod_authz_core.c>
      # Apache 2.4
      Require all granted
   </IfModule>
   <IfModule !mod_authz_core.c>
      # Apache 2.2
      Order deny,allow
      Allow from all
   </IfModule>
  </Location>
  <Directory /var/www/releases>
    Options +Indexes
  </Directory>
</VirtualHost>
